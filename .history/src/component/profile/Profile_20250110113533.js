import React, { useState } from 'react';
import { X } from 'lucide-react';

function Profile() {
  const [activeTab, setActiveTab] = useState('personal');
  const [showEditName, setShowEditName] = useState(false);
  const [showChangePassword, setShowChangePassword] = useState(false);
  const [showEditUsername, setShowEditUsername] = useState(false);
  const [showEditBio, setShowEditBio] = useState(false);
  const [showEditAvatar, setShowEditAvatar] = useState(false);

  const [user] = useState({
    name: "Kh∆∞∆°ng Thanh",
    username: "thanhkhuong",
    bio: "Ch∆∞a c·∫≠p nh·∫≠t",
    avatar: "T",
  });

  const renderPersonalInfo = () => (
    <div>
      <h2 className="text-xl mb-2">Th√¥ng tin c√° nh√¢n</h2>
      <p className="text-gray-600 mb-6">Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n c·ªßa b·∫°n.</p>

      <div className="bg-[#F8F9FF] rounded-2xl">
        <div className="p-4">
          <h3 className="text-base font-medium mb-1">Th√¥ng tin c∆° b·∫£n</h3>
          <p className="text-gray-600 text-sm">
            Qu·∫£n l√Ω t√™n hi·ªÉn th·ªã, t√™n ng∆∞·ªùi d√πng, bio v√† avatar c·ªßa b·∫°n.
          </p>
        </div>

        <div className="bg-white rounded-2xl">
          <div 
            className="flex items-center justify-between p-4 hover:bg-gray-50 cursor-pointer"
            onClick={() => setShowEditName(true)}
          >
            <div>
              <div className="font-medium">H·ªç v√† t√™n</div>
              <div className="text-gray-600 mt-1">{user.name}</div>
            </div>
            <span className="text-gray-400 text-xl">‚Ä∫</span>
          </div>

          <div className="border-t">
            <div 
              className="flex items-center justify-between p-4 hover:bg-gray-50 cursor-pointer"
              onClick={() => setShowEditUsername(true)}
            >
              <div>
                <div className="font-medium">T√™n ng∆∞·ªùi d√πng</div>
                <div className="text-gray-600 mt-1">{user.username}</div>
              </div>
              <span className="text-gray-400 text-xl">‚Ä∫</span>
            </div>
          </div>

          <div className="border-t">
            <div 
              className="flex items-center justify-between p-4 hover:bg-gray-50 cursor-pointer"
              onClick={() => setShowEditBio(true)}
            >
              <div>
                <div className="font-medium">Gi·ªõi thi·ªáu</div>
                <div className="text-gray-600 mt-1">{user.bio}</div>
              </div>
              <span className="text-gray-400 text-xl">‚Ä∫</span>
            </div>
          </div>

          <div className="border-t">
            <div 
              className="flex items-center justify-between p-4 hover:bg-gray-50 cursor-pointer"
              onClick={() => setShowEditAvatar(true)}
            >
              <div>
                <div className="font-medium">·∫¢nh ƒë·∫°i di·ªán</div>
                <div className="mt-2 w-12 h-12 bg-green-600 rounded-full flex items-center justify-center text-white text-xl">
                  {user.avatar}
                </div>
              </div>
              <span className="text-gray-400 text-xl">‚Ä∫</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderSecurityInfo = () => (
    <div>
      <h2 className="text-xl mb-2">M·∫≠t kh·∫©u v√† b·∫£o m·∫≠t</h2>
      <p className="text-gray-600 mb-6">Qu·∫£n l√Ω m·∫≠t kh·∫©u v√† c√†i ƒë·∫∑t b·∫£o m·∫≠t.</p>

      <div className="bg-[#F8F9FF] rounded-2xl">
        <div className="p-4">
          <h3 className="text-base font-medium mb-1">ƒêƒÉng nh·∫≠p & kh√¥i ph·ª•c</h3>
          <p className="text-gray-600 text-sm">
            Qu·∫£n l√Ω m·∫≠t kh·∫©u c·ªßa b·∫°n.
          </p>
        </div>

        <div className="bg-white rounded-2xl">
          <div 
            className="flex items-center justify-between p-4 hover:bg-gray-50 cursor-pointer"
            onClick={() => setShowChangePassword(true)}
          >
            <div>
              <div className="font-medium">ƒê·ªïi m·∫≠t kh·∫©u</div>
              <div className="text-gray-600 mt-1">Ch∆∞a ƒë·ªïi m·∫≠t kh·∫©u</div>
            </div>
            <span className="text-gray-400 text-xl">‚Ä∫</span>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 to-blue-50">
      <div className="max-w-[1200px] mx-auto px-4 py-8">
        {/* Title */}
        <div className="mb-8">
          <h1 className="text-2xl font-bold">C√†i ƒë·∫∑t t√†i kho·∫£n</h1>
          <p className="text-gray-600 mt-1">
            Qu·∫£n l√Ω c√†i ƒë·∫∑t t√†i kho·∫£n c·ªßa b·∫°n nh∆∞ th√¥ng tin c√° nh√¢n, c√†i ƒë·∫∑t b·∫£o m·∫≠t, qu·∫£n l√Ω th√¥ng b√°o, v.v.
          </p>
        </div>

        {/* Main Container */}
        <div className="grid grid-cols-[280px,1fr] gap-8">
          {/* Sidebar - Th√™m sticky positioning */}
          <div className="sticky top-4 h-fit">
            <button 
              className={`w-full text-left p-3 rounded-xl flex items-center space-x-3 ${
                activeTab === 'personal' ? 'bg-[#1A1A37] text-white' : ''
              }`}
              onClick={() => setActiveTab('personal')}
            >
              <span className="text-xl">üë§</span>
              <span className="font-medium">Th√¥ng tin c√° nh√¢n</span>
            </button>
            <button 
              className={`w-full text-left p-3 rounded-xl flex items-center space-x-3 mt-1 ${
                activeTab === 'security' ? 'bg-[#1A1A37] text-white' : ''
              }`}
              onClick={() => setActiveTab('security')}
            >
              <span className="text-xl">üîí</span>
              <span className="font-medium">M·∫≠t kh·∫©u v√† b·∫£o m·∫≠t</span>
            </button>
          </div>

          {/* Content Area */}
          <div>
            {activeTab === 'personal' && renderPersonalInfo()}
            {activeTab === 'security' && renderSecurityInfo()}
          </div>
        </div>
      </div>

      {/* Modals */}
      {showEditName && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4">
          <div className="bg-white rounded-lg w-full max-w-md">
            <div className="flex justify-between items-center p-6 border-b">
              <h3 className="text-xl font-medium">C·∫≠p nh·∫≠t t√™n c·ªßa b·∫°n</h3>
              <button onClick={() => setShowEditName(false)}>
                <X className="w-6 h-6" />
              </button>
            </div>
            <div className="p-6">
              <p className="text-gray-600 mb-4">
                T√™n s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã tr√™n trang c√° nh√¢n, trong c√°c b√¨nh lu·∫≠n v√† b√†i vi·∫øt c·ªßa b·∫°n.
              </p>
              <div className="mb-4">
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  H·ªç v√† t√™n
                </label>
                <input
                  type="text"
                  className="w-full p-2 border rounded-lg"
                  defaultValue={user.name}
                />
              </div>
              <button className="w-full bg-[#98E9E9] text-gray-700 py-2 rounded-lg hover:bg-[#7CD5D5]">
                L∆∞u l·∫°i
              </button>
            </div>
          </div>
        </div>
      )}

      {showChangePassword && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4">
          <div className="bg-white rounded-lg w-full max-w-md">
            <div className="flex justify-between items-center p-6 border-b">
              <h3 className="text-xl font-medium">ƒê·ªïi m·∫≠t kh·∫©u</h3>
              <button onClick={() => setShowChangePassword(false)}>
                <X className="w-6 h-6" />
              </button>
            </div>
            <div className="p-6">
              <p className="text-gray-600 mb-4">
                M·∫≠t kh·∫©u c·ªßa b·∫°n ph·∫£i c√≥ t·ªëi thi·ªÉu 8 k√Ω t·ª±, bao g·ªìm c·∫£ ch·ªØ s·ªë, ch·ªØ c√°i v√† k√Ω t·ª± ƒë·∫∑c bi·ªát (!$@%...).
              </p>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    M·∫≠t kh·∫©u hi·ªán t·∫°i
                  </label>
                  <input
                    type="password"
                    className="w-full p-2 border rounded-lg"
                    placeholder="Nh·∫≠p m·∫≠t kh·∫©u hi·ªán t·∫°i c·ªßa b·∫°n"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    M·∫≠t kh·∫©u m·ªõi
                  </label>
                  <input
                    type="password"
                    className="w-full p-2 border rounded-lg"
                    placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi
                  </label>
                  <input
                    type="password"
                    className="w-full p-2 border rounded-lg"
                    placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n"
                  />
                </div>

                <div className="flex items-center space-x-2">
                  <input type="checkbox" id="logout-devices" className="rounded" />
                  <label htmlFor="logout-devices" className="text-sm text-gray-700">
                    ƒêƒÉng xu·∫•t kh·ªèi c√°c thi·∫øt b·ªã kh√°c
                  </label>
                </div>

                <button className="w-full bg-[#98E9E9] text-gray-700 py-2 rounded-lg hover:bg-[#7CD5D5]">
                  ƒê·ªïi m·∫≠t kh·∫©u
                </button>

                <div className="text-center">
                  <a href="#" className="text-red-500 text-sm hover:underline">
                    B·∫°n qu√™n m·∫≠t kh·∫©u ∆∞?
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Edit Username Modal */}
      {showEditUsername && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4">
          <div className="bg-white rounded-lg w-full max-w-md">
            <div className="flex justify-between items-center p-6 border-b">
              <h3 className="text-xl font-medium">C·∫≠p nh·∫≠t t√™n ng∆∞·ªùi d√πng</h3>
              <button onClick={() => setShowEditUsername(false)}>
                <X className="w-6 h-6" />
              </button>
            </div>
            <div className="p-6">
              <p className="text-gray-600 mb-4">
                T√™n ng∆∞·ªùi d√πng s·∫Ω ƒë∆∞·ª£c s·ª≠ d·ª•ng trong URL trang c√° nh√¢n c·ªßa b·∫°n.
              </p>
              <div className="mb-4">
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  T√™n ng∆∞·ªùi d√πng
                </label>
                <input
                  type="text"
                  className="w-full p-2 border rounded-lg"
                  defaultValue={user.username}
                />
              </div>
              <button className="w-full bg-[#98E9E9] text-gray-700 py-2 rounded-lg hover:bg-[#7CD5D5]">
                L∆∞u l·∫°i
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Edit Bio Modal */}
      {showEditBio && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4">
          <div className="bg-white rounded-lg w-full max-w-md">
            <div className="flex justify-between items-center p-6 border-b">
              <h3 className="text-xl font-medium">C·∫≠p nh·∫≠t gi·ªõi thi·ªáu</h3>
              <button onClick={() => setShowEditBio(false)}>
                <X className="w-6 h-6" />
              </button>
            </div>
            <div className="p-6">
              <p className="text-gray-600 mb-4">
                Th√™m m·ªôt v√†i th√¥ng tin v·ªÅ b·∫£n th√¢n b·∫°n.
              </p>
              <div className="mb-4">
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  Gi·ªõi thi·ªáu
                </label>
                <textarea
                  className="w-full p-2 border rounded-lg h-32 resize-none"
                  defaultValue={user.bio}
                  placeholder="Vi·∫øt g√¨ ƒë√≥ v·ªÅ b·∫£n th√¢n..."
                />
              </div>
              <button className="w-full bg-[#98E9E9] text-gray-700 py-2 rounded-lg hover:bg-[#7CD5D5]">
                L∆∞u l·∫°i
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Edit Avatar Modal */}
      {showEditAvatar && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4">
          <div className="bg-white rounded-lg w-full max-w-md">
            <div className="flex justify-between items-center p-6 border-b">
              <h3 className="text-xl font-medium">C·∫≠p nh·∫≠t ·∫£nh ƒë·∫°i di·ªán</h3>
              <button onClick={() => setShowEditAvatar(false)}>
                <X className="w-6 h-6" />
              </button>
            </div>
            <div className="p-6">
              <div className="flex justify-center mb-6">
                <div className="w-24 h-24 bg-green-600 rounded-full flex items-center justify-center text-white text-3xl">
                  {user.avatar}
                </div>
              </div>
              <div className="mb-4">
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  T·∫£i l√™n ·∫£nh m·ªõi
                </label>
                <input
                  type="file"
                  accept="image/*"
                  className="w-full p-2 border rounded-lg"
                />
              </div>
              <button className="w-full bg-[#98E9E9] text-gray-700 py-2 rounded-lg hover:bg-[#7CD5D5]">
                L∆∞u l·∫°i
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default Profile;
